{"version":3,"sources":["main.js"],"names":["DynamicSearch","React","createClass","getInitialState","searchString","handleChange","event","setState","target","value","console","log","render","countries","props","items","state","trim","toLowerCase","length","filter","country","name","match","map","ReactDOM","document","getElementById"],"mappings":";;AAAA,IAAIA,gBAAgBC,MAAMC,WAAN,CAAkB;AAAA;;;AAEpC;AACAC,mBAAiB,2BAAU;AACzB,WAAO,EAAEC,cAAc,EAAhB,EAAP;AACD,GALmC;;AAOpC;AACAC,gBAAc,sBAASC,KAAT,EAAe;AAC3B;AACA,SAAKC,QAAL,CAAc,EAACH,cAAaE,MAAME,MAAN,CAAaC,KAA3B,EAAd;AACAC,YAAQC,GAAR,CAAY,gBAAZ;AACD,GAZmC;;AAcpCC,UAAQ,kBAAW;;AAEjB,QAAIC,YAAY,KAAKC,KAAL,CAAWC,KAA3B;AACA,QAAIX,eAAe,KAAKY,KAAL,CAAWZ,YAAX,CAAwBa,IAAxB,GAA+BC,WAA/B,EAAnB;;AAEA;AACA,QAAGd,aAAae,MAAb,GAAsB,CAAzB,EAA2B;AACzBN,kBAAYA,UAAUO,MAAV,CAAiB,UAASC,OAAT,EAAiB;AAC5C,eAAOA,QAAQC,IAAR,CAAaJ,WAAb,GAA2BK,KAA3B,CAAkCnB,YAAlC,CAAP;AACD,OAFW,CAAZ;AAGD;;AAED,WACE;AAAA;AAAA;AACE,qCAAO,MAAK,MAAZ,EAAmB,OAAO,KAAKY,KAAL,CAAWZ,YAArC,EAAmD,UAAU,KAAKC,YAAlE,EAAgF,aAAY,SAA5F,GADF;AAEE;AAAA;AAAA;AACMQ,kBAAUW,GAAV,CAAc,UAASH,OAAT,EAAiB;AAAE,iBAAO;AAAA;AAAA;AAAKA,oBAAQC,IAAb;AAAA;AAAA,WAAP;AAAkC,SAAnE;AADN;AAFF,KADF;AAQD;;AAlCmC,CAAlB,CAApB;AAqCA;AACA,IAAIT,YAAY,CACd,EAAC,QAAQ,IAAT,EADc,EACE,EAAC,QAAQ,OAAT,EADF,EACqB,EAAC,QAAQ,MAAT,EADrB,EACuC,EAAC,QAAQ,gBAAT,EADvC,EAEd,EAAC,QAAQ,SAAT,EAFc,EAEO,EAAC,QAAQ,QAAT,EAFP,EAE2B,EAAC,QAAQ,OAAT,EAF3B,EAE8C,EAAC,QAAQ,SAAT,EAF9C,EAGd,EAAC,QAAQ,WAAT,EAHc,EAGS,EAAC,QAAQ,MAAT,EAHT,EAG2B,EAAC,QAAQ,gBAAT,EAH3B,EAGuD,EAAC,QAAQ,UAAT,EAHvD,EAId,EAAC,QAAQ,UAAT,EAJc,EAIQ,EAAC,QAAQ,WAAT,EAJR,EAI+B,EAAC,QAAQ,QAAT,EAJ/B,EAImD,EAAC,QAAQ,OAAT,EAJnD,EAKd,EAAC,QAAQ,OAAT,EALc,EAKK,EAAC,QAAQ,OAAT,EALL,EAKwB,EAAC,QAAQ,qBAAT,EALxB,EAKyD,EAAC,QAAQ,OAAT,EALzD,EAMd,EAAC,QAAQ,UAAT,EANc,EAMQ,EAAC,QAAQ,SAAT,EANR,EAM6B,EAAC,QAAQ,oBAAT,EAN7B,EAM6D,EAAC,QAAQ,QAAT,EAN7D,EAOd,EAAC,QAAQ,OAAT,EAPc,EAOK,EAAC,QAAQ,QAAT,EAPL,EAOyB,EAAC,QAAQ,OAAT,EAPzB,CAAhB;;AAUAY,SAASb,MAAT,CACE,oBAAC,aAAD,IAAe,OAAQC,SAAvB,GADF,EAEEa,SAASC,cAAT,CAAwB,MAAxB,CAFF","file":"main.js","sourcesContent":["var DynamicSearch = React.createClass({\n\n  // sets initial state\n  getInitialState: function(){\n    return { searchString: '' };\n  },\n\n  // sets state, triggers render method\n  handleChange: function(event){\n    // grab value form input box\n    this.setState({searchString:event.target.value});\n    console.log(\"scope updated!\");\n  },\n\n  render: function() {\n\n    var countries = this.props.items;\n    var searchString = this.state.searchString.trim().toLowerCase();\n\n    // filter countries list by value from input box\n    if(searchString.length > 0){\n      countries = countries.filter(function(country){\n        return country.name.toLowerCase().match( searchString );\n      });\n    }\n\n    return (\n      <div>\n        <input type=\"text\" value={this.state.searchString} onChange={this.handleChange} placeholder=\"Search!\" />\n        <ul>\n            { countries.map(function(country){ return <li>{country.name} </li>; }) }\n        </ul>\n      </div>\n    )\n  }\n\n});\n// list of countries, defined with JavaScript object literals\nvar countries = [\n  {\"name\": \"Sn\"}, {\"name\": \"China\"}, {\"name\": \"Peru\"}, {\"name\": \"Czech Republic\"},\n  {\"name\": \"Bolivia\"}, {\"name\": \"Latvia\"}, {\"name\": \"Samoa\"}, {\"name\": \"Armenia\"},\n  {\"name\": \"Greenland\"}, {\"name\": \"Cuba\"}, {\"name\": \"Western Sahara\"}, {\"name\": \"Ethiopia\"},\n  {\"name\": \"Malaysia\"}, {\"name\": \"Argentina\"}, {\"name\": \"Uganda\"}, {\"name\": \"Chile\"},\n  {\"name\": \"Aruba\"}, {\"name\": \"Japan\"}, {\"name\": \"Trinidad and Tobago\"}, {\"name\": \"Italy\"},\n  {\"name\": \"Cambodia\"}, {\"name\": \"Iceland\"}, {\"name\": \"Dominican Republic\"}, {\"name\": \"Turkey\"},\n  {\"name\": \"Spain\"}, {\"name\": \"Poland\"}, {\"name\": \"Haiti\"}\n];\n\nReactDOM.render(\n  <DynamicSearch items={ countries } />,\n  document.getElementById('main')\n);\n"]}